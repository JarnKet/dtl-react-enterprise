/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as PrivateRouteImport } from './routes/_private'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AboutIndexRouteImport } from './routes/about/index'
import { Route as PrivateSettingIndexRouteImport } from './routes/_private/setting/index'
import { Route as PrivateRemoteJobIndexRouteImport } from './routes/_private/remote-job/index'
import { Route as PrivateDashboardIndexRouteImport } from './routes/_private/dashboard/index'

const PrivateRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutIndexRoute = AboutIndexRouteImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateSettingIndexRoute = PrivateSettingIndexRouteImport.update({
  id: '/setting/',
  path: '/setting/',
  getParentRoute: () => PrivateRoute,
} as any)
const PrivateRemoteJobIndexRoute = PrivateRemoteJobIndexRouteImport.update({
  id: '/remote-job/',
  path: '/remote-job/',
  getParentRoute: () => PrivateRoute,
} as any)
const PrivateDashboardIndexRoute = PrivateDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => PrivateRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/dashboard': typeof PrivateDashboardIndexRoute
  '/remote-job': typeof PrivateRemoteJobIndexRoute
  '/setting': typeof PrivateSettingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutIndexRoute
  '/dashboard': typeof PrivateDashboardIndexRoute
  '/remote-job': typeof PrivateRemoteJobIndexRoute
  '/setting': typeof PrivateSettingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_private': typeof PrivateRouteWithChildren
  '/about/': typeof AboutIndexRoute
  '/_private/dashboard/': typeof PrivateDashboardIndexRoute
  '/_private/remote-job/': typeof PrivateRemoteJobIndexRoute
  '/_private/setting/': typeof PrivateSettingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/dashboard' | '/remote-job' | '/setting'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/dashboard' | '/remote-job' | '/setting'
  id:
    | '__root__'
    | '/'
    | '/_private'
    | '/about/'
    | '/_private/dashboard/'
    | '/_private/remote-job/'
    | '/_private/setting/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivateRoute: typeof PrivateRouteWithChildren
  AboutIndexRoute: typeof AboutIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/setting/': {
      id: '/_private/setting/'
      path: '/setting'
      fullPath: '/setting'
      preLoaderRoute: typeof PrivateSettingIndexRouteImport
      parentRoute: typeof PrivateRoute
    }
    '/_private/remote-job/': {
      id: '/_private/remote-job/'
      path: '/remote-job'
      fullPath: '/remote-job'
      preLoaderRoute: typeof PrivateRemoteJobIndexRouteImport
      parentRoute: typeof PrivateRoute
    }
    '/_private/dashboard/': {
      id: '/_private/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardIndexRouteImport
      parentRoute: typeof PrivateRoute
    }
  }
}

interface PrivateRouteChildren {
  PrivateDashboardIndexRoute: typeof PrivateDashboardIndexRoute
  PrivateRemoteJobIndexRoute: typeof PrivateRemoteJobIndexRoute
  PrivateSettingIndexRoute: typeof PrivateSettingIndexRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateDashboardIndexRoute: PrivateDashboardIndexRoute,
  PrivateRemoteJobIndexRoute: PrivateRemoteJobIndexRoute,
  PrivateSettingIndexRoute: PrivateSettingIndexRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivateRoute: PrivateRouteWithChildren,
  AboutIndexRoute: AboutIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
